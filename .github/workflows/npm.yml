name: Release & Publish to npm (no inputs)

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure npm auth
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Install deps (prefer ci)
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Test
        run: npm test --if-present

      - name: Build
        run: npm run build --if-present

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump patch version & tag
        id: bump
        run: |
          set -e
          npm version patch --no-commit-hooks --git-tag-version true
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

          git push origin HEAD:${GITHUB_REF_NAME}
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release (auto notes)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          generate_release_notes: true

      - name: Publish to npm (latest)
        if: ${{ secrets.NPM_TOKEN != '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: npm publish --access public --tag latest
      
      - name: Publish dry-run (no token)
        if: ${{ secrets.NPM_TOKEN == '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' }}
        run: npm publish --dry-run
